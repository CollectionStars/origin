#include <iostream>
#include <string>
#include "Figure.h"
#include "Triangle.h"
#include "Iso_Triangle.h"
#include "Equ_Triangle.h"
#include "Rect_Triangle.h"
#include "Quadrangle.h"
#include "Parallelogram.h"
#include "Rectangle.h"
#include "Square.h"
#include "Rhombus.h"


int main() {

	setlocale(LC_ALL, "ru");
	try {
		Triangle t1(10,20,30, 50, 60, 70);
		std::cout << "Треугольник (стороны: 10,20,30; углы: 50,60,70) создан\n";
	}
	catch (Error e) {
		std::cout <<"Треугольник (стороны: 10,20,30; углы: 50,60,70) не создан. Причина: "<< e.what() << "\n";
	}

	try {
		Rect_Triangle t2(10, 20, 30, 50, 60);
		std::cout << "Прямоугольный треугольник (стороны: 10,20,30; углы: 50,60,90)  создан.\n";
	}
	catch (Error e) {
		std::cout << "Прямоугольный треугольник (стороны: 10,20,30; углы: 50,60,90) не создан. Причина: " << e.what() << "\n";
	}


	try {
		Iso_Triangle t(10, 20, 50, 60);
		std::cout << "Равнобедренный треугольник (стороны: 10,20,10; углы: 50,60,50) создан\n";

	}
	catch (Error e) {
		std::cout << "Равнобедренный треугольник (стороны: 10,20,10; углы: 50,60,50) не создан. Причина: " << e.what() << "\n";
	}

	try {
		Equ_Triangle e(30);
		std::cout << "Равносторонний треугольник (стороны: 30,30,30; углы: 60,60,60) создан\n";
	}
	catch (Error e) {
		std::cout << "Равносторонний треугольник (стороны: 30,30,30; углы: 60,60,60) не создан. Причина: " << e.what() << "\n";
	}

	try {
		Quadrangle q1(10, 20, 30, 40, 50, 60, 70, 80);
		std::cout << "Четырехугольник (стороны: 10,20,30,40; углы: 50,60,70,80) создан\n";
	}
	catch (Error e) {
		std::cout <<"Четырехугольник (стороны: 10,20,30,40; углы: 50,60,70,80) не создан. Причина: "<< e.what() << "\n";
	}

	try {
		Rectangle q2(10, 20);
		std::cout << "Прямоугольник (стороны: 10,20,10,20; углы: 90,90,90,90) создан\n";
	}
	catch (Error e) {
		std::cout << "Прямоугольник (стороны: 10,20,10,20; углы: 90,90,90,90) не создан. Причина: " << e.what() << "\n";
	}

	try {
		Square q3(20);
		std::cout << "Квадрат (стороны: 30,30,30,30; углы: 90,90,90,90) создан\n";
	}
	catch (Error e) {
		std::cout << "Квадрат (стороны: 30,30,30,30; углы: 90,90,90,90) не создан. Причина: " << e.what() << "\n";
	}
	try {
		Parallelogram q4(20, 30, 30, 40);
		std::cout << "Параллелограмм (стороны: 20,30,20,30; углы: 30,40,30,40) создан\n";
	}
	catch (Error e) {
		std::cout << "Параллелограмм (стороны: 20,30,20,30; углы: 30,40,30,40) не создан. Причина: " << e.what() << "\n";
	}

	try {
		Rhombus r(30, 30, 40);
		std::cout << "Ромб (стороны: 30,30,30,30; углы: 30,40,30,40) создан\n";
	}
	catch (Error e) {
		std::cout << "Ромб (стороны: 30,30,30,30; углы: 30,40,30,40) не создан. Причина: " << e.what() << "\n";
	}
}